#!/usr/bin/env sh

# Clones the repositories listed in the documentation
# of this function (see below) and executes the project-config
# pre-commit hook inside each one of them.
#
# Note that we're using 'grep' here to get all lines of this
# script that start with '#:test-check'. This pattern allow us
# to use other https urls in documentation and in other tests,
# just use a unique :identifier for those.
#
# Repositories to check:
#
#:test-check https://github.com/mondeja/project-config
#:test-check https://github.com/mondeja/mdpo
#
checkRepositoriesUsingTheStyles() {
  grep '^#:test-check https://' "$0" | while read -r line; do
    set -e
    repo="$(printf %s "$line" | cut -d' ' -f2)"
    dirname="$(basename "$repo")"
    printf "%s\n" "--- $dirname ---"
    dirpath="$TEMPDIR/$dirname"
    if [ -d "$dirpath" ]; then
      cd "$dirpath"
      git pull > /dev/null
    else
      gitFastClone "$repo" "$dirpath"
    fi
    cd "$TEMPDIR/$dirname"
    pre-commit install > /dev/null

    set +e

    # If in the hooks of the project we've configured the project-config-fix
    # hook, we'll use it to fix the project configuration executing all
    # hooks, but if the hook is project-config, we'll only execute that hook
    # filtering the original configuration to only initialize the project-config
    # hook environment. See the function 'createPreCommitConfForProjectConfig'.
    project_config_fix_cmd="$(< .pre-commit-config.yaml grep project-config-fix)"
    if [ -n "$project_config_fix_cmd" ]; then
      hook_id=""  # run all hooks
      config_file=".pre-commit-config.yaml"
    else
      hook_id="project-config"
      config_file="$PRE_COMMIT_FOR_PROJECT_CONFIG_FILE"
      createPreCommitConfForProjectConfig || setExitcode 1
    fi
    printf "Configuration file: %s\n" "$config_file"

    if ! pre-commit run -v -c "$config_file" -a "$hook_id"; then
      setExitcode 1
    fi
    printf "\n"
  done;
}

main() {
  . _scripts/utils
  _prepareTempdir
  checkRepositoriesUsingTheStyles
  exit "$(getExitcode)"
}

main
