{
  rules: [
    {
      files: [".github/workflows/deploy-docs.yml"],
      JMESPathsMatch: [
        ["type(@)", "object"],

        // name
        ["name", "Deploy documentation"],

        // permissions
        ["type(permissions)", "object"],
        ["permissions.contents", "write"],

        // on
        ["type(on)", "object"],
        ["on.workflow_dispatch", null],
        ["type(on.release)", "object"],
        ["type(on.release.types)", "array"],
        [
          "contains(on.release.types, 'released')",
          true,
          "deepmerge(@, {on: {release: {types: ['created']}}})",
        ],

        // jobs
        ["type(jobs)", "object"],

        // jobs[0]
        ["contains(keys(jobs), 'deploy-version-docs')", true],
        ['jobs."deploy-version-docs"."runs-on"', "ubuntu-latest"],
        ['type(jobs."deploy-version-docs".concurrency)', "object"],
        [
          'jobs."deploy-version-docs".concurrency.group',
          "${{ github.workflow }}-${{ github.ref }}",
        ],
        ['type(jobs."deploy-version-docs".steps)', "array"],

        // jobs[0].steps[0]
        ['length(keys(jobs."deploy-version-docs".steps[0]))', 1],
        [
          "regex_match('actions/checkout@v\\d+', jobs.\"deploy-version-docs\".steps[0].uses)",
          true,
        ],

        // jobs[0].steps[1]
        ['jobs."deploy-version-docs".steps[1].name', "Set up Python"],
        [
          "regex_match('actions/setup-python@v\\d+', jobs.\"deploy-version-docs\".steps[1].uses)",
          true,
        ],

        // jobs[0].steps[2]
        ['jobs."deploy-version-docs".steps[2].name', "Install dependencies"],
        ['jobs."deploy-version-docs".steps[2].run', "pip install -U hatch"],

        // jobs[0].steps[3]
        ['jobs."deploy-version-docs".steps[3].name', "Build documentation"],
        ['jobs."deploy-version-docs".steps[3].run', "hatch run docs:build"],

        // jobs[0].steps[4]
        ['jobs."deploy-version-docs".steps[4].name', "Get version"],
        ['jobs."deploy-version-docs".steps[4].id', "get-version"],
        [
          'jobs."deploy-version-docs".steps[4].run',
          'echo "version=$(cat pyproject.toml | grep "version = " -m 1 | cut -d\' \' -f3 | cut -c 2- | rev | cut -c 2- | rev)" >> $GITHUB_OUTPUT',
        ],

        // jobs[0].steps[5]
        ['jobs."deploy-version-docs".steps[5].name', "Deploy documentation"],
        [
          "regex_match('peaceiris/actions-gh-pages@v\\d+', jobs.\"deploy-version-docs\".steps[5].uses)",
          true,
        ],
        ['type(jobs."deploy-version-docs".steps[5].with)', "object"],
        [
          'jobs."deploy-version-docs".steps[5].with.github_token',
          "${{ secrets.GITHUB_TOKEN }}",
        ],
        [
          'jobs."deploy-version-docs".steps[5].with.publish_dir',
          "./docs/_build/html",
        ],
        [
          'jobs."deploy-version-docs".steps[5].with.destination_dir',
          "${{ steps.get-version.outputs.version }}",
        ],

        // jobs[1]
        ["contains(keys(jobs), 'deploy-latest-docs')", true],
        ['jobs."deploy-latest-docs"."runs-on"', "ubuntu-latest"],
        ['type(jobs."deploy-latest-docs".concurrency)', "object"],
        [
          'jobs."deploy-latest-docs".concurrency.group',
          "${{ github.workflow }}-${{ github.ref }}",
        ],
        ['type(jobs."deploy-latest-docs".steps)', "array"],

        // jobs[1].steps[0]
        ['length(keys(jobs."deploy-latest-docs".steps[0]))', 1],
        [
          "regex_match('actions/checkout@v\\d+', jobs.\"deploy-latest-docs\".steps[0].uses)",
          true,
        ],

        // jobs[1].steps[1]
        ['jobs."deploy-latest-docs".steps[1].name', "Set up Python"],
        [
          "regex_match('actions/setup-python@v\\d+', jobs.\"deploy-latest-docs\".steps[1].uses)",
          true,
        ],
        ['jobs."deploy-latest-docs".steps[1].with."python-version"', "3.10"],

        // jobs[1].steps[2]
        ['jobs."deploy-latest-docs".steps[2].name', "Install dependencies"],
        ['jobs."deploy-latest-docs".steps[2].run', "pip install -U hatch"],

        // jobs[1].steps[3]
        ['jobs."deploy-latest-docs".steps[3].name', "Build documentation"],
        ['jobs."deploy-latest-docs".steps[3].run', "hatch run docs:build"],

        // jobs[1].steps[4]
        ['jobs."deploy-latest-docs".steps[4].name', "Deploy documentation"],
        [
          "regex_match('peaceiris/actions-gh-pages@v\\d+', jobs.\"deploy-latest-docs\".steps[4].uses)",
          true,
        ],
        ['type(jobs."deploy-latest-docs".steps[4].with)', "object"],
        [
          'jobs."deploy-latest-docs".steps[4].with.github_token',
          "${{ secrets.GITHUB_TOKEN }}",
        ],
        [
          'jobs."deploy-latest-docs".steps[4].with.publish_dir',
          "./docs/_build/html",
        ],
        ['jobs."deploy-latest-docs".steps[4].with.destination_dir', "latest"],
      ],
    },
    {
      files: [".github/workflows/deploy-docs.yml"],
      hint: "Use penultimate supported version obtained from pyproject.toml to deploy documentation on CI",
      crossJMESPathsMatch: [
        [
          "replace(jobs.\"deploy-version-docs\".steps[1].with.\"python-version\", '.', '')",
          [
            "pyproject.toml",
            "replace(tool.hatch.envs.tests.matrix[0].python[-2], 'py', '')",
          ],
          "op([0], '==', [1])",
          true,
        ],
        [
          "replace(jobs.\"deploy-latest-docs\".steps[1].with.\"python-version\", '.', '')",
          [
            "pyproject.toml",
            "replace(tool.hatch.envs.tests.matrix[0].python[-2], 'py', '')",
          ],
          "op([0], '==', [1])",
          true,
        ],
      ],
    },
  ],
}
