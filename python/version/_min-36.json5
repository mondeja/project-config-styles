/**
 * Version 3.6 as the minimum Python version for a project.
 **/
{
  rules: [
    {
      files: [".pre-commit-config.yaml"],
      ifJMESPathsMatch: {
        "pyproject.toml": [
          ["starts_with(project.\"requires-python\", '>=3.6')", true],
        ],
      },
      JMESPathsMatch: [
        // pyupgrade pre-commit hook must use correct argument
        [
          "contains(repos[?repo=='https://github.com/asottile/pyupgrade'] | [0].hooks[0].args, '--py36-plus')",
          true,
        ],

        // add-trailing-comma pre-commit hook must use correct argument
        [
          "contains(keys(repos[?repo=='https://github.com/asottile/add-trailing-comma'] | [0].hooks[0]), 'args')",
          true,
        ],
        [
          "contains(repos[?repo=='https://github.com/asottile/add-trailing-comma'] | [0].hooks[0].args, '--py36-plus')",
          true,
        ],
      ],
    },
    {
      files: ["pyproject.toml"],
      ifJMESPathsMatch: {
        "pyproject.toml": [
          ["starts_with(project.\"requires-python\", '>=3.6')", true],
        ],
      },
      JMESPathsMatch: [
        /**
         * isort
         *
         * Configure the Python version that isort targets.
         *
         * This is useful for giving to isort the exact libraries
         * that must group as standard ones. We configure here all
         * standard libraries added in subsecuents versions.
         *
         * Without this, if we import, for example, a standard library
         * removed in 3.6 or previous version that would be grouped
         * inside the standard libraries, which would lead to confusion
         * and possibly unexpected behaviour at runtime.
         **/
        ["tool.isort.py_version", 36],
        // https://docs.python.org/3/whatsnew/3.7.html#new-modules
        [
          "op(tool.isort.extra_standard_library, '>', ['contextvars', 'dataclasses', 'importlib.resources'])",
          true,
        ],
        // https://docs.python.org/3/whatsnew/3.8.html#new-modules
        [
          "contains(tool.isort.extra_standard_library, 'importlib.metadata')",
          true,
        ],
        // https://docs.python.org/3/whatsnew/3.9.html#new-modules
        [
          "op(tool.isort.extra_standard_library, '>', ['zoneinfo', 'graphlib'])",
          true,
        ],
        // 3.10 does not add new modules
        // https://docs.python.org/3.11/whatsnew/3.11.html#new-modules
        [
          "op(tool.isort.extra_standard_library, '>', ['tomllib', 'wsgiref.types'])",
          true,
        ],
      ],
    },
    {
      files: ["pyproject.toml"],
      ifJMESPathsMatch: {
        // if pyproject.toml is specifying double quotes for flake8,
        // the formatting is black so we must specify the target version
        // in his configuration
        "pyproject.toml": [
          ['tool.flakeheaven."inline-quotes"', "double"],
          ["starts_with(project.\"requires-python\", '>=3.6')", true],
        ],
      },
      JMESPathsMatch: [
        ["type(tool.black)", "object"],
        ['type(tool.black."target-version")', "array"],
        ['length(tool.black."target-version")', 1],
        ['tool.black."target-version"[0]', "py36"],
      ],
    },
    {
      /**
       * project.classifiers
       **/
      files: ["pyproject.toml"],
      ifJMESPathsMatch: {
        "pyproject.toml": [
          ["starts_with(project.\"requires-python\", '>=3.6')", true],
        ],
      },
      JMESPathsMatch: [
        [
          "contains(project.classifiers, 'Programming Language :: Python :: 3.6')",
          true,
        ],
        [
          "contains(project.classifiers, 'Programming Language :: Python :: 3.7')",
          true,
        ],
      ],
    },
  ],
}
