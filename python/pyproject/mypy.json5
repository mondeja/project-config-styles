{
  rules: [
    {
      files: ["pyproject.toml"],
      JMESPathsMatch: [
        ["contains(keys(@), 'tool')", true],
        ["contains(keys(tool), 'mypy')", true],
        ["tool.mypy.strict", true],
      ],
    },
    {
      files: ["pyproject.toml"],
      JMESPathsMatch: [["regex_match('^\\.\\.', tool.mypy.mypy_path)", false]],
      ifJMESPathsMatch: {
        "pyproject.toml": [["contains(keys(tool.mypy), 'mypy_path')", true]],
      },
      hint: "When developing local stubs, don't forget to restore 'mypy_path' to a relative path of the project root",
    },
    {
      files: ["pyproject.toml"],
      JMESPathsMatch: [
        /**
         * When we are writing types, we must ensure that isort is executed
         * differently for 'tests/' and for 'src/'.
         *
         * In 'src/' we must add `from __future__ import annotations` to all
         * files, but not in 'tests/' nor 'setup.py'.
         **/
        ["contains(keys(tool.ruff.lint.isort), 'required-imports')", true],
        ['type(tool.ruff.lint.isort."required-imports")', "array"],

        // Include __future__ annotations imports
        [
          "contains(tool.ruff.lint.isort.\"required-imports\", 'from __future__ import annotations')",
          true,
        ],

        // Don't include __future__ annotations imports in tests nor setup.py
        [
          "contains(keys(tool.ruff.lint.\"per-file-ignores\"), 'tests/**')",
          true,
        ],
        [
          'contains(tool.ruff.lint."per-file-ignores"."tests/**", \'I002\')',
          true,
        ],
        [
          "contains(keys(tool.ruff.lint.\"per-file-ignores\"), 'setup.py')",
          true,
        ],
        [
          'contains(tool.ruff.lint."per-file-ignores"."setup.py", \'I002\')',
          true,
        ],
      ],
    },
  ],
}
