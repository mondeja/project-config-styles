{
  rules: [
    {
      files: ["pyproject.toml"],
      JMESPathsMatch: [
        ["type(tool)", "object"],
        ['type(tool."project-config")', "object"],
        ['type(tool."project-config".style)', "array"],
        [
          "op(length(tool.\"project-config\".style), '>', `0`)",
          true,
          "set(@, 'tool', set(tool, 'project-config', set(tool.\"project-config\", 'style', ['style.json5'])))",
        ],
        [
          'type(tool."project-config".cache)',
          "string",
          "set(@, 'tool', set(tool, 'project-config', set(tool.\"project-config\", 'cache', '5 minutes')))",
        ],
        [
          "regex_match('(\\d+ ((seconds?)|(minutes?)|(hours?)|(days?)|(weeks?)))|(never)$', tool.\"project-config\".cache)",
          true,
          "5 minutes",
        ],
      ],
    },
    {
      files: ["pyproject.toml"],
      hint: "The styles for project-config must be fetched from online sources",
      JMESPathsMatch: [
        [
          "op(length(tool.\"project-config\".style[?regex_match('^(gh)|(https)|(py)://', @)]), '==', length(tool.\"project-config\".style))",
          true,
        ],
      ],
    },
    {
      files: ["pyproject.toml"],
      hint: "All base style files must be written in JSON5 format",
      JMESPathsMatch: [
        [
          "op(length(map(&regex_search('\\.json5$', @), tool.\"project-config\".style)), '==', length(tool.\"project-config\".style))",
          true,
        ],
      ],
    },
  ],
}
